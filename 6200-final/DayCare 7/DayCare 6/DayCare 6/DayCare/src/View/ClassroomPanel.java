/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import daycare.Classroom;
import daycare.ClassroomFactory;
import daycare.Immu;
import daycare.ImmuFactory;
import daycare.Student;
import daycare.StudentFactory;
import daycare.Teacher;
import daycare.TeacherFactory;
import java.awt.CardLayout;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chenyifan
 */
public class ClassroomPanel extends javax.swing.JPanel {

    /**
     * Creates new form ClassroomPanel
     */
    private List<Classroom> classrooms;
    //private List<Student> students;
    JPanel panel1;
    
    public ClassroomPanel(JPanel a,List<Classroom> classrooms) throws IOException {
        initComponents();
        this.classrooms = classrooms;
        this.panel1=a;
        btnImage();
        populateTable();
    }
    private void btnImage(){
    ImageIcon imageIcon = new ImageIcon("./image/classroom.jpg");
    jButton3.setIcon(imageIcon);
}
         public void populateTable() throws IOException
{
    DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
    dtm.setRowCount(0);
   for(Classroom classroom:classrooms){
       //System.out.println(rule);
       Object row[] =new Object[4];
       row[0] =classroom;
       row[1] = classroom.getTeacher();
       row[2]= classroom.getSize();
       row[3]=classroom.getStudents();
       //row[3]= student.getClass();
       dtm.addRow(row);
   }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Class Room", "Teacher", "Size", "Student"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Reschedule");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Check Class Info");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jButton1)
                        .addGap(133, 133, 133)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jButton3)))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {                                         
            try {
                StudentFactory studentFactory = new StudentFactory();
                List<Student> students = studentFactory.createPerson("student1.csv");
                File writeFile = new File("student1.csv");
                BufferedWriter writeText = new BufferedWriter(new FileWriter(writeFile));
                for(Student student: students) {
                    Student curstudent = student;
                    int age=curstudent.getAge()+6;
                    curstudent.setAge(age);
                    curstudent.setDate(new Date());
                    writeText.write(curstudent.getName()+","+curstudent.getAge()+","+curstudent.getGpa());
                    writeText.newLine();
                    
                }
                writeText.flush();
                writeText.close();
                
                TeacherFactory teacherFactory = new TeacherFactory();
                List<Teacher> teachers = teacherFactory.createPerson("Teacher.csv");
                
                for(Teacher teacher: teachers) {
                    Teacher curteacher = teacher;
                    System.out.println(curteacher);
                    
                }
                
//           // RuleFactory rf =new RuleFactory();
//            ImmuFactory imf =new ImmuFactory();
//            immus = imf.createImmu("Immu1.csv");
//            for(Immu immu:immus){
//                Immu curi=immu;
//                System.out.println(curi);
//            }
            ClassroomFactory classroomFactory = new ClassroomFactory();
            classrooms = classroomFactory.generateClassroom(students, teachers);  // TODO add your handling code here:
            } catch (IOException ex) {
                Logger.getLogger(ClassroomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            populateTable();
        } catch (IOException ex) {
            Logger.getLogger(ClassroomPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            int selectedRow = jTable1.getSelectedRow();
            if(selectedRow >=0){
            Classroom c = (Classroom)jTable1.getValueAt(selectedRow, 0);
            
            DetailedClassroom  panel2 = new DetailedClassroom(panel1,c);
            
            panel1.add("StudentPanel", panel2);
            CardLayout layout = (CardLayout) panel1.getLayout();
            layout.next(panel1);
            }else{
                JOptionPane.showMessageDialog(null,"please select any row");
            }
            
            
            
            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(ClassroomPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
